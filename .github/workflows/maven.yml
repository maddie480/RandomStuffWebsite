# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check for tabs
      run: |
        find "(" -name "*.java" -or -name "*.jsp" -or -name "*.html" -or -name "*.css" -or -name "*.js" -or -name "*.vue" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Pl "\t" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No tab found!"

    - name: Check for CRLF
      run: |
        find "(" -name "*.java" -or -name "*.jsp" -or -name "*.html" -or -name "*.css" -or -name "*.js" -or -name "*.vue" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Plz "\r\n" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No CRLF found!"

    - name: Check for trailing spaces
      run: |
        find "(" -name "*.java" -or -name "*.jsp" -or -name "*.html" -or -name "*.css" -or -name "*.js" -or -name "*.vue" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Pl " $" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No trailing space found!"

    - name: Cache graphics dump
      id: graphicsdumpcache
      uses: actions/cache@v4
      with:
        path: src/main/webapp/WEB-INF/classes/resources/static/graphics-dump.zip
        key: graphics-dump-${{ hashFiles('.github/workflows/maven.yml') }}

    - name: Download graphics dump
      if: steps.graphicsdumpcache.outputs.cache-hit != 'true'
      run: |
        curl --fail --connect-timeout 10 --retry 10 --retry-delay 10 --retry-all-errors https://files.gamebanana.com/bitpit/graphics-dump-001.zip > src/main/webapp/WEB-INF/classes/resources/static/graphics-dump.zip
        curl --fail --connect-timeout 10 --retry 10 --retry-delay 10 --retry-all-errors https://files.gamebanana.com/bitpit/graphics-dump-002.zip >> src/main/webapp/WEB-INF/classes/resources/static/graphics-dump.zip
        sha256sum -c .github/graphics-dump-hash.txt

    - name: Cache Radio LNJ
      id: radiocache
      uses: actions/cache@v4
      if: github.ref == 'refs/heads/main'
      with:
        path: |
          target/random-stuff-website-1.0.0/WEB-INF/classes/resources/music/*
          target/random-stuff-website-1.0.0/WEB-INF/classes/radio_lnj_meta.json
        key: radio-lnj-${{ hashFiles('.github/radio-lnj-sources.json') }}

    - name: Cache Unicode mirror
      uses: actions/cache@v4
      if: github.ref == 'refs/heads/main'
      with:
        path: target/random-stuff-website-1.0.0/WEB-INF/classes/resources/static/unicode-mirror/*
        key: unicode-mirror-${{ hashFiles('src/main/java/ovh/maddie480/randomstuff/frontend/PrepareUnicodeMirror.java') }}

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: front-vue/node_modules/*
        key: node-modules-${{ hashFiles('front-vue/package-lock.json') }}

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Install dependencies
      if: steps.radiocache.outputs.cache-hit != 'true' && github.ref == 'refs/heads/main'
      run: |
        sudo apt-get update && sudo apt-get install ffmpeg
        pip install ffmpeg-normalize
        curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /tmp/yt-dlp
        chmod +x /tmp/yt-dlp

    - name: Build with Maven (w/ Radio LNJ)
      if: github.ref == 'refs/heads/main'
      env:
        YT_DLP_COOKIES: ${{ secrets.YT_DLP_COOKIES }}
      run: |
        export RADIO_LNJ_SOURCES=`cat .github/radio-lnj-sources.json`
        mv -v target /tmp/old-target || echo "No existing target folder"
        mvn -B clean verify --file pom.xml

    - name: Build with Maven
      if: github.ref != 'refs/heads/main'
      run: mvn -B clean verify --file pom.xml

    - name: Set up QEMU
      if: github.ref == 'refs/heads/main'
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: github.ref == 'refs/heads/main'
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: max480/random-stuff-frontend:latest

    - name: Submit Dependency Snapshot
      if: github.ref == 'refs/heads/main'
      uses: advanced-security/maven-dependency-submission-action@v4.1.3

    - name: Upload target folder as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: target
        path: target
